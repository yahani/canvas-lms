// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`renders the ProficiencyRating component 1`] = `
<Row>
  <Cell
    textAlign="center"
  >
    <div
      style={
        {
          "display": "inline-block",
        }
      }
    >
      <RadioInput
        checked={false}
        context="success"
        disabled={false}
        inline={false}
        label={
          <ScreenReaderContent
            as="span"
          >
            Change mastery
          </ScreenReaderContent>
        }
        onChange={[Function]}
        readOnly={false}
        size="medium"
        variant="simple"
      />
    </div>
  </Cell>
  <Cell
    textAlign="start"
  >
    <TextInput
      defaultValue="Stellar"
      display="block"
      isRequired={false}
      messages={null}
      onChange={[Function]}
      renderLabel={
        <ScreenReaderContent
          as="span"
        >
          Change description
        </ScreenReaderContent>
      }
      shouldNotWrap={false}
      size="medium"
      textAlign="start"
      type="text"
    />
  </Cell>
  <Cell
    textAlign="start"
  >
    <TextInput
      defaultValue="10"
      display="block"
      isRequired={false}
      messages={null}
      onChange={[Function]}
      renderLabel={
        <ScreenReaderContent
          as="span"
        >
          Change points
        </ScreenReaderContent>
      }
      shouldNotWrap={false}
      size="medium"
      textAlign="start"
      type="text"
      width="4rem"
    />
  </Cell>
  <Cell
    textAlign="start"
  >
    <span
      style={
        {
          "whiteSpace": "nowrap",
        }
      }
    >
      <Popover
        color="primary"
        constrain="window"
        defaultIsShowingContent={false}
        insertAt="bottom"
        isShowingContent={false}
        offsetX={0}
        offsetY={0}
        on="click"
        onHideContent={[Function]}
        onShowContent={[Function]}
        placement="bottom center"
        renderTrigger={
          <Link
            as="button"
            color="link"
            elementRef={[Function]}
            forceButtonRole={true}
            iconPlacement="start"
            isWithinText={false}
          >
            <div>
              <span
                className="colorPickerIcon"
                style={
                  {
                    "background": "#00ff00",
                  }
                }
              />
              Change
            </div>
          </Link>
        }
        shadow="resting"
        shouldAlignArrow={false}
        shouldCloseOnDocumentClick={true}
        shouldCloseOnEscape={true}
        shouldContainFocus={false}
        shouldFocusContentOnTriggerBlur={false}
        shouldRenderOffscreen={false}
        shouldReturnFocus={true}
        shouldTrackPosition={true}
        stacking="topmost"
        withArrow={true}
      >
        <ColorPicker
          afterClose={[Function]}
          allowWhite={false}
          colors={
            [
              {
                "hexcode": "#BD3C14",
                "name": "Brick",
              },
              {
                "hexcode": "#FF2717",
                "name": "Red",
              },
              {
                "hexcode": "#E71F63",
                "name": "Magenta",
              },
              {
                "hexcode": "#8F3E97",
                "name": "Purple",
              },
              {
                "hexcode": "#65499D",
                "name": "Deep Purple",
              },
              {
                "hexcode": "#4554A4",
                "name": "Indigo",
              },
              {
                "hexcode": "#1770AB",
                "name": "Blue",
              },
              {
                "hexcode": "#0B9BE3",
                "name": "Light Blue",
              },
              {
                "hexcode": "#06A3B7",
                "name": "Cyan",
              },
              {
                "hexcode": "#009688",
                "name": "Teal",
              },
              {
                "hexcode": "#009606",
                "name": "Green",
              },
              {
                "hexcode": "#8D9900",
                "name": "Olive",
              },
              {
                "hexcode": "#D97900",
                "name": "Pumpkin",
              },
              {
                "hexcode": "#FD5D10",
                "name": "Orange",
              },
              {
                "hexcode": "#F06291",
                "name": "Pink",
              },
            ]
          }
          currentColor="#00ff00"
          focusOnMount={false}
          hideOnScroll={false}
          hidePrompt={true}
          isOpen={true}
          nonModal={true}
          parentComponent="ProficiencyRating"
          setStatusColor={[Function]}
          withAnimation={false}
          withArrow={false}
          withBorder={false}
          withBoxShadow={false}
          withDarkCheck={false}
        />
      </Popover>
      <div
        className="delete"
      >
        <IconButton
          as="button"
          color="secondary"
          cursor="pointer"
          disabled={false}
          elementRef={[Function]}
          margin="0"
          onClick={[Function]}
          renderIcon={<IconTrashLine />}
          screenReaderLabel="Delete proficiency rating"
          shape="rectangle"
          size="medium"
          type="button"
          withBackground={false}
          withBorder={false}
        />
      </div>
    </span>
  </Cell>
</Row>
`;
